############################################################
# Ping Identity DevOps values.yaml
############################################################
# The yaml is separated into 2 major sections:
#  - global - Represents the base set of values that will
#             be used for each product, if that product
#             doesn't override the global values.
#
#  - image  - For every image/product, the values will
#             be merged with the global settings, and
#             take precedence.
############################################################

############################################################
# @section Global values
############################################################
global:
  ############################################################
  # @param    global.annotations Annotations listed, will be
  # @desc     added to the kubernetes resource
  # @default  {}
  ############################################################
  annotations: {}

  ############################################################
  # @param    global.envs Environment variables listed will be 
  # @desc     added to the global-env-vars configmap
  # @default  {}
  #
  # NOTE: Environment variables listed at the global: level
  #       will actually end up being listed twice in the
  #       configmaps (i.e. global-env-vars and product-env-vars)
  ############################################################
  envs: {}

  ############################################################
  # @param    global.addReleaseNameToResource Provides global ability
  # @desc     to add names to kubernetes resources. One of `{none, append, prepend}`
  # @default  prepend
  #                      none: No use of Release.Name
  #                    append: Appends the Release.Name
  #                   prepend: Prepends the Release.Name ** DEFAULT **
  ############################################################
  addReleaseNameToResource: prepend

  ############################################################
  # Ingress
  #
  # @param    global.ingress.enabled
  # @default  false
  #
  # @param    global.ingress.addReleaseToHost Add release to host. 
  # @desc     One of `{prepend, append, subdomain, none}`
  # @default  subdomain
  #
  # @param    global.ingress.defaultDomain Replaces with
  # @desc     "_defaultDomain_" in host fields
  # @default  example.com
  #
  # @param    global.ingress.defaultTlsSecret Replaces with
  # @desc     "_defaultTlsSecret_" in tls.secretName
  #
  # @param    global.ingress.annotations
  # @default  {}
  ############################################################
  ingress:
    enabled: false
    addReleaseNameToHost: subdomain
    defaultDomain: example.com
    defaultTlsSecret:
    annotations: {}
      # nginx example
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # kubernetes.io/ingress.class: "nginx-public"

  ############################################################
  # Internal Certificates
  #
  # @param    global.privateCert.generate If true, then an internal certificate
  # @desc     secret will be created along with mount of the certificate in
  # @desc     /run/secrets/internal-cert (creates a tls.crt and tls.key).
  # @desc     By default the Issuer of the cert will be the service name
  # @desc     created by the Helm Chart.  Additionally, the ingress hosts,
  # @desc     if enabled, will be added to the list of X509v3 Subject Alternative Name
  # @default  false
  #
  # @param global.privateCert.additionalHosts Additional hosts for the cert
  # @default []
  # @param global.privateCert.additionalIPs Additional IP addresses for the cert
  # @default []
  ############################################################
  privateCert:
    generate: false
    additionalHosts: []
    additionalIPs: []

  ############################################################
  # Master Password Generation
  #
  # @param    global.masterPassword Uses Helm function derivePassword,
  # @desc     which uses the master password specification:
  # @desc     https://masterpassword.app/masterpassword-algorithm.pdf
  #
  # @param    global.masterPassword.enabled Enable master password
  # @default  false
  #
  # @param    global.masterPassword.strength Master password template. One of `{long, maximum}`
  # @param    global.masterPassword.name Defaults to release name
  # @param    global.masterPassword.site Defaults to chart name
  # @param    global.masterPassword.secret Defaults to release namespace
  #
  #      masterPassword:
  #        enabled: true
  #        strength: long
  #        name:   # default - .Release.Name
  #        site:   # default - .Chart.Name
  #        secret: # default - .Release.Namespace
  ############################################################
  masterPassword:
    enabled: false

  ############################################################
  # @param    global.vault Hashicorp Vault configuration
  #
  # @param    global.vault.enabled Enable Vault
  # @default  false
  #
  # @param    global.vault.hashicorp.annotations Annotation names, which will
  # @desc     be appended to 'vault.hashicorp.com/' in the annotation
  #
  # https://www.vaultproject.io/docs/platform/k8s/injector/annotations
  #
  # @param    global.vault.secrets Vault secrets to pull in
  # @default  {}
  ############################################################
  vault:
    enabled: false
    hashicorp:
      annotations:
        agent-inject: true
        agent-init-first: true
        agent-pre-populate-only: true
        log-level: info
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
        serviceAccountName: vault-auth
  #   secrets:
  #     {secret-name}:
  #       {secret-key | to-json}:
  #         path: /opt/in/some/location/secrets
  #         file: devops-secret.env

  ############################################################
  # Image
  #
  # By default the images uses will be indicated by these
  # variables.  An example might look like:
  #
  #   pingidentity/pingdataconsole:2111 (November, 2021)
  #
  # NOTE: image.name MUST be set in child chart
  #   Example: image.name: pingfederate
  # 
  # @param    global.image.repository Default image repository
  # @default  pingidentity
  #
  # @param    global.image.tag Default image tag
  # @default  2111.1
  # 
  # @param    global.image.pullPolicy Default image pull policy
  # @default  IfNotPresent
  ############################################################
  image:
    repository: pingidentity
    name:
    tag: "2111.1"
    pullPolicy: IfNotPresent

  ############################################################
  # External Images (typically for initContainers)
  #
  # @param    global.externalImage Provides ability to use external images
  # @desc     for various purposes such as using curl, waitfor, etc. A pingtoolkit
  # @desc     image is included by default for running waitFor and generating
  # @desc     private cert initContainers. Any values specified on the image
  # @desc     will be copied directly to the k8s spec for the container.
  # @default  {pingtoolkit}
  ############################################################
  externalImage:
    pingtoolkit:
      image: pingidentity/pingtoolkit:2111.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 1m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 9031
        runAsGroup: 0

  ############################################################
  # Services
  #
  # @param    global.services Services mapping a port to a targetPort on the
  # @desc     corresponding container
  # @default  {}
  #
  # @param    global.services.clusterExternalDNSHostname
  # @desc     Value for the external-dns.alpha.kubernetes.io/hostname annotation
  # @default  
  #
  # @param    global.services.clusterServiceName If set, then this name will
  # @desc     be used as the cluster service name (i.e clusterService == true).
  #
  # @param    global.services.serviceName.dataService If true, a ClusterIP service is
  # @desc     created reachable within the cluster. A single IP is provided and the
  # @desc     service will round-robin across the backend containers
  #
  # @param    global.services.serviceName.clusterService If true, a headless service is
  # @desc     created, explicitly specifying "None" for the clusterIP.  DNS requests to
  # @desc     this service will provide one of the IPs of the backend containers
  #
  # @param    global.services.serviceName.containerPort Port on the kubernetes container
  #
  # @param    global.services.serviceName.servicePort Port available from the kubernetes service.
  # @desc     If clusterService=true this port on the cluster service is not really
  # @desc     used, as the headless service always maps through to the container port
  #
  # @param    global.services.serviceName.ingressPort Port available from the kubernetes ingress
  #
  # https://kubernetes.io/docs/concepts/services-networking/service/
  ############################################################
  services: {}
  #  admin:
  #    containerPort: 9999
  #    servicePort: 9999
  #    ingressPort: 9999
  #    dataService: true
  #  clusterbind:
  #    containerPort: 7600
  #    servicePort: 7600
  #    clusterService: true
  #  clusterfail:
  #    containerPort: 7700
  #    servicePort: 7700
  #    clusterService: true
  #  clusterExternalDNSHostname:
  #  clusterServiceName:


  ############################################################
  # @section Workload values - Deployment and StatefulSet
  #
  # Two workloads supported:
  #  - Deployment
  #  - StatefulSet
  ############################################################
  workload:
    # @param    global.workload Can be Deployment or StatefulSet
    # @default  Deployment
    type: Deployment

    # @param global.workload.annotations Workload annotations
    annotations: {}

    ############################################################
    # @param    global.workload.schedulerName K8s scheduler
    # @default  default-scheduler
    #
    # https://kubernetes.io/docs/tasks/extend-kubernetes/configure-multiple-schedulers/
    ############################################################
    schedulerName: default-scheduler

    ############################################################
    # @param    global.workload.shareProcessNamespace Set shareProcessNamespace in the pod spec
    # @default  false
    #
    # https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/
    ############################################################
    shareProcessNamespace: false

    ############################################################
    # Deployments
    #
    # @param    global.workload.deployment Deployment workload configuration
    #
    # @param    global.workload.deployment.strategy Deployment pod replacement strategy
    #
    # @param    global.workload.deployment.strategy.type Strategy type
    # @default  RollingUpdate
    #
    # @param    global.workload.deployment.strategy.rollingUpdate.maxSurge Max surge,
    # @desc     only applicable for RollingUpdate type
    # @default  1
    #
    # @param    global.workload.deployment.strategy.rollingUpdate.maxUnavailable Max unavailable,
    # @desc     only applicable for RollingUpdate type
    # @default  0
    #
    # https://kubernetes.io/docs/concepts/workloads/controllers/deployment
    ############################################################
    deployment:
      strategy:
        # Can be RollingUpdate or Recreate
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0

    ############################################################
    # StatefulSets
    #
    # @param global.workload.statefulSet StatefulSet workload configuration
    #
    # https://kubernetes.io/docs/concepts/workloads/controllers/statefulset
    ############################################################
    statefulSet:
      # @param    global.workload.statefulSet.partition Used for canary testing if n>0
      # @default  0
      partition: 0

      ############################################################
      # Persistent Volumes
      #
      # @param    global.workload.statefulSet.persistentvolume.enabled
      # @desc     Enable persistent volumes
      # @default  true
      #
      # @param    global.workload.statefulSet.persistentvolume.volumes
      # @desc     For every volume defined in the volumes list, 3 items will be
      # @desc     created in the StatefulSet:
      # @desc     1. container.volumeMounts - name and mountPath.
      # @desc     2. template.spec.volume - name and persistentVolumeClaim.claimName.
      # @desc     3. spec.volumeClaimTemplates - persistentVolumeClaim.
      # @default  {out-dir}
      #
      # @param    global.workload.statefulSet.persistentvolume.volumes.volumeName.mountPath
      # @desc     Mount path for the volume
      # 
      # @param    global.workload.statefulSet.persistentvolume.volumes.volumeName.persistentVolumeClaim
      # @desc     volumeClaimTemplate
      #
      # https://kubernetes.io/docs/concepts/storage/persistent-volumes/
      ############################################################
      persistentvolume:
        enabled: true
        volumes:
          out-dir:
            mountPath: /opt/out
            persistentVolumeClaim:
              accessModes:
              - ReadWriteOnce
              storageClassName:
              resources:
                requests:
                  storage: 4Gi

    ############################################################
    # @param    global.workload.securityContext securityContext for the workload.
    # @desc     The securityContext defined will be inserted directly into the spec.
    # @desc     The user (9031) and group (0) represent the current user and group used
    # @desc     with PingIdentity images (except PingDelegator). The fsGroup is
    # @desc     required for any workloads that volumeMount a pvc (i.e. StatefulSets)
    # @default  fsGroup 0, runAsUser 9031, runAsGroup 0
    #
    # Note: 
    ############################################################
    securityContext:
      fsGroup: 0
      runAsUser: 9031
      runAsGroup: 0
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL

  ############################################################
  # Container Information
  #
  # @param global.container Configure the container in the workload Pod spec
  #
  # https://kubernetes.io/docs/concepts/workloads/controllers/
  ############################################################
  container:
    # @param global.container.replicaCount Number of replicas for workload
    # @default 1
    replicaCount: 1

    # resources - Request  0 cpu/0 GB
    #             Limit    4 cpu/0 GB
    # @param global.container.resources container resources yaml to insert into Pod spec
    resources:
      requests:
        cpu: 0
        memory: 0
      limits:
        cpu: 0
        memory: 0
    # @param global.container.nodeSelector nodeSelector yaml to insert into Pod spec
    # @default {}
    nodeSelector: {}
    # @param global.container.tolerations tolerations yaml to insert into Pod spec
    # @default []
    tolerations: []
    # @param global.container.affinity affinity yaml to insert into Pod spec
    # @default {}
    affinity: {}
    # @param global.container.terminationGracePeriodSeconds termination grace period
    # @default 30
    terminationGracePeriodSeconds: 30

    # @param global.container.envFrom envFrom yaml to insert into Pod spec
    # @default []
    envFrom: []
    # Additional envFrom configmap/secret references can be added
    # envFrom:
    # - configMapRef:
    #     name: my-example-configmap
    #     optional: true
    # - secretRef:
    #     name: my-example-secrets
    #     optional: true

    ############################################################
    # container life handlers, allowing for lifecycle events such
    # as postStart and preStop events
    #
    # @param global.container.lifecycle lifecycle yaml to insert into Pod spec
    #
    # https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event
    ############################################################
    lifecycle: {}
    # Example
    # lifecycle:
    #   postStart:
    #     exec:
    #       command: ["/bin/sh", "-c", "echo Start Complete > /tmp/message"]

    ############################################################
    # Probes
    #
    # @param    global.container.probes probes yaml to insert into Pod spec
    # @default  liveness, readiness, and startup probes defined
    #
    # Probes have a number of fields that you can use to more precisely control the
    # behavior of liveness and readiness checks.
    #
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    ############################################################
    probes:
      livenessProbe:
        exec:
          command:
            - /opt/liveness.sh
        initialDelaySeconds: 30
        periodSeconds: 30
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 4
      readinessProbe:
        exec:
          command:
            - /opt/readiness.sh
        initialDelaySeconds: 30
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 4
      startupProbe:
        exec:
          command:
            - /opt/liveness.sh
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 90

  ############################################################
  # @section Other global defaults
  # Licensing
  #
  # @param    global.license.secret.devOps Identify the k8s secret containing the DevOps
  # @desc     USER/KEY if used during deployment. pingctl can be used to generate the devops-secret
  # @default  devops-secret
  #
  # Using pingctl utility (brew install pingctl):
  #    pingctl k8s generate devops-secret | kubectl apply -f -
  ############################################################
  license:
    secret:
      devOps: devops-secret

  # @param    global.utilitySidecar Deploy a utility sidecar for running command-line tools.
  # @desc     This sidecar is useful for command line utilities like collect-support-data. The sidecar
  # @desc     will remain running alongside the workload, even when the sidecar isn't being used.
  # @desc     It does not need to be listed in the includeSidecars value.
  #
  # @param    global.utilitySidecar.enabled Enable the utility sidecar
  # @default  false
  #
  # @param    global.utilitySidecar.resources Set k8s resources yaml for the sidecar spec
  # @defaul   1 CPU and 2g memory request and limit
  utilitySidecar:
    enabled: false
    # CSD and other command line tools can require a lot of resources.
    # Modify these values to change the sidecar container's resource requirements.
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: "1"
        memory: 2Gi

  #############################################################
  # Includes for sidecars, initContainers and volumes
  #
  # At both global and product level, includes of sidecars,
  # initContainers and volumes can be provided.  By default,
  # none are included.
  #
  # @param    global.includeSidecars names of sidecars to include, from the top-level `sidecars` value
  # @default  []
  #
  # @param    global.includeInitContainers names of sidecars to include, from the top-level `initContainers` value
  # @default  []
  #
  # @param    global.includeVolumes names of sidecars to include, from the top-level `volumes` value
  # @default  []
  #############################################################
  includeSidecars: []
  includeInitContainers: []
  includeVolumes: []

#############################################################
# @section Shared utilities
# Sidecar Definitions
#
# @param    sidecars Sidecar yaml definitions available to product workload spec
# @default  {}
#############################################################
sidecars: {}
# Example:
# sidecars:
#   logger:
#     name: log-container
#     image: pingidentity/pingtoolkit:2111
#     volumeMounts:
#       - mountPath: /tmp/logs/
#         name: logger
#         readOnly: false

#############################################################
# InitContainer Definitions
#
# @param    initContainers initContainer yaml definitions available to product workload spec
# @default  {}
#############################################################
initContainers: {}
# Example:
# initContainers:
#   init-example:
#     name: 01-init
#     image: pingidentity/pingtoolkit:2111
#     command: ['sh', '-c', 'echo "InitContainer 1"']

#############################################################
# Volume Definitions
#
# @param    volumes volume yaml definitions available to product workload spec
# @desc     for sidecars, initContainers, or main product containers
# @default  {}
#############################################################
volumes: {}
# Examples:
# volumes:
#   logger:
#     emptyDir: {}

#############################################################
# ConfigMap Definitions
#
# @param    configMaps configMap yaml definitions available to product workload spec
# @desc     for sidecars or main product containers
# @default  {}
#############################################################
configMaps: {}
# Example:
# configMaps:
#   pingdirectory-backup:
#     data:
#       backup.sh: |-
#         #!/bin/sh
#         ...

#############################################################
# @section Image/Product values
#############################################################

#############################################################
# @param    ldap-sdk-tools LDAP SDK tools values
#
# @param    ldap-sdk-tools.enabled Enable LDAP SDK tools deployment
# @default  false
#############################################################
ldap-sdk-tools:
  enabled: false
  name: ldap-sdk-tools
  image:
    name: ldap-sdk-tools

  container:
    command: "tail -f /dev/null"

    probes:
      livenessProbe:
        exec:
          command:
            - echo
      readinessProbe:
        exec:
          command:
            - echo
      startupProbe:
        exec:
          command:
            - echo

#############################################################
# @param    pingfederate-admin PingFederate admin values
#
# @param    pingfederate-admin.enabled Enable PingFederate admin deployment
# @default  false
#############################################################
pingfederate-admin:
  enabled: false
  name: pingfederate-admin
  image:
    name: pingfederate

  container:
    resources:
      requests:
        cpu: 0
        memory: 1Gi
      limits:
        cpu: 2
        memory: 4Gi

  workload:
    deployment:
      strategy:
        type: Recreate

  # Example: If PingFederate Admin relies on pingdirectory for AuthN
  #          Creates init container wait-for on pingdirectory ldaps service
  #
  # container:
  #   waitFor:
  #     pingdirectory:
  #       service: ldaps
  #       timeoutSeconds: 300


  # Example: Pulling in a secret (called pingfederate-license) into container
  #          mounting the name (license) value into a file (/opt/in/.../pingfederate.lic)
  #
  # secretVolumes:
  #   pingfederate-license:
  #     items:
  #       license: /opt/in/instance/server/default/conf/pingfederate.lic

  # Example: Pulling in a configMap (called pingfederate-props) into container
  #          mounting the name (pf-props) value into a file (/opt/in/.../pingfederate.properties)
  #
  # configMapVolumes:
  #  pingfederate-props:
  #     items:
  #       pf-props: /opt/in/etc/pingfederate.properties

  services:
    https:
      servicePort: 9999
      containerPort: 9999
      ingressPort: 443
      dataService: true
    clusterbind:
      servicePort: 7600
      containerPort: 7600
      clusterService: true
    clusterfail:
      servicePort: 7700
      containerPort: 7700
      clusterService: true
    clusterServiceName: pingfederate-cluster

  ingress:
    hosts:
      - host: pingfederate-admin._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingfederate-admin._defaultDomain_

#############################################################
# @param    pingfederate-engine PingFederate engine values
#
# @param    pingfederate-engine.enabled Enable PingFederate engine deployment
# @default  false
#############################################################
pingfederate-engine:
  enabled: false
  name: pingfederate-engine
  image:
    name: pingfederate

  container:
    resources:
      requests:
        cpu: 0
        memory: 1Gi
      limits:
        cpu: 2
        memory: 4Gi
    waitFor:
      pingfederate-admin:
        service: https
        timeoutSeconds: 300

  envs:
    PF_ADMIN_PORT: "9999"

  #############################################################
  # Horizontal Pod Autoscaling
  # By default this is disabled, since there dependencies to the containers
  # CPU and/or Memory limits.
  #
  # @param    pingfederate-engine.clustering.autoscaling Configure Horizontal Pod Autoscaling
  #
  # @param    pingfederate-engine.clustering.autoscaling.enabled Enable Horizontal Pod Autoscaling.
  # @desc     If enabled, ensure that proper pingfederate.container.resources values are set and
  # @desc     coordinated with the targetCPUUtilizationPercentage or targetMemoryUtilizationPercentage
  # @default  false
  #
  # @param    pingfederate-engine.clustering.autoscaling.minReplicas Autoscaler minimum replicas
  # @default  1
  #
  # @param    pingfederate-engine.clustering.autoscaling.maxReplicas Autoscaler maximum replicas
  # @default  4
  #
  # @param    pingfederate-engine.clustering.autoscaling.targetCPUUtilizationPercentage Target CPU utilization
  # @default  75
  #
  # @param    pingfederate-engine.clustering.autoscaling.targetMemoryUtilizationPercentage Target memory utilization
  # 
  # @param    pingfederate-engine.clustering.autoscaling.behavior Custom HPA behavior yaml
  # @default  {}
  #
  # @param    pingfederate-engine.clustering.autoscalingMetricsTemplate Custom HPA metrics yaml
  # @default  []
  #############################################################
  clustering:
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 75
      # targetMemoryUtilizationPercentage: 50
      behavior: {}
      # Custom Horizontal Pod Scaling behavior
      # ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#default-behavior
      #  scaleDown:
      #    stabilizationWindowSeconds: 300
      #    policies:
      #    - type: Percent
      #      value: 100
      #      periodSeconds: 15
      #  scaleUp:
      #    stabilizationWindowSeconds: 0
      #    policies:
      #    - type: Percent
      #      value: 100
      #      periodSeconds: 15
      #    - type: Pods
      #      value: 4
      #      periodSeconds: 15
      #    selectPolicy: Max

    autoscalingMetricsTemplate: []
    # Custom or additional autoscaling metrics
    # ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics
    # - type: Pods
    #   pods:
    #     metric:
    #       name: custom-metric
    #     target:
    #       type: AverageValue
    #       averageValue: 10000m

  services:
    https:
      servicePort: 9031
      containerPort: 9031
      ingressPort: 443
      dataService: true
    clusterbind:
      servicePort: 7600
      containerPort: 7600
      clusterService: true
    clusterfail:
      servicePort: 7700
      containerPort: 7700
      clusterService: true
    clusterServiceName: pingfederate-cluster

  ingress:
    hosts:
      - host: pingfederate-engine._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingfederate-engine._defaultDomain_

#############################################################
# @param    pingdirectory PingDirectory values
#
# @param    pingdirectory.enabled Enable PingDirectory deployment
# @default  false
#############################################################
pingdirectory:
  # @param    pingdirectory.cronjob CronJobs run a kubectl exec command to run commands on
  # @desc     a utility sidecar container. They will also create the necessary ServiceAccount, Role,
  # @desc     and RoleBinding to run the jobs
  #
  # @param    pingdirectory.cronjob.enabled Enable the PingDirectory CronJob
  # @default  false
  #
  # @param    pingdirectory.cronjob.spec yaml to insert into the created CronJob spec. The jobTemplate
  # @desc     should not be included. A schedule value must be provided
  #
  # @param    pingdirectory.cronjob.image Image to run the Jobs. The image must include kubectl
  # @default  bitname/kubectl:latest
  #
  # @param    pingdirectory.cronjob.args Job arguments
  # @default  []
  cronjob:
    enabled: false
    spec:
      # A schedule must be set for cronjobs.
      # Example running once every six hours:
      # schedule: "0 */6 * * *"
      successfulJobsHistoryLimit: 0
      failedJobsHistoryLimit: 1
    # The image can be replaced with any desired image that includes kubectl
    image: bitnami/kubectl:latest
    args: []
  enabled: false
  name: pingdirectory
  image:
    name: pingdirectory

  container:
    replicaCount: 1
    resources:
      requests:
        cpu: 50m
        memory: 2Gi
      limits:
        cpu: 2
        memory: 8Gi

    terminationGracePeriodSeconds: 300

    probes:
      readinessProbe:
        periodSeconds: 30
        failureThreshold: 4
      startupProbe:
        periodSeconds: 10
        failureThreshold: 180

    # Example affinity for typical directory installation
    #
    # affinity:
    #   podAntiAffinity:
    #     # Add a hard requirement for each PD pod to be deployed to a different node
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/name
    #           operator: In
    #           values:
    #           - pingdirectory
    #       topologyKey: "kubernetes.io/hostname"
    #     # Add a soft requirement for each PD pod to be deployed to a different AZ
    #     preferredDuringSchedulingIgnoredDuringExecution:
    #     - weight: 1
    #       podAffinityTerm:
    #         labelSelector:
    #           matchExpressions:
    #           - key: app.kubernetes.io/name
    #             operator: In
    #             values:
    #             - pingdirectory
    #         topologyKey: "failure-domain.beta.kubernetes.io/zone"     <--- kubernetes prior to 1.17
    #         topologyKey: "topology.kubernetes.io/region"              <--- kubernetes 1.17+

  workload:
    type: StatefulSet
    statefulSet:
      persistentvolume:
        volumes:
          out-dir:
            persistentVolumeClaim:
              resources:
                requests:
                  storage: 8Gi

  envs:
    MAKELDIF_USERS: "20000"

  services:
    ldap:
      servicePort: 389
      containerPort: 1389
      dataService: true
    ldaps:
      servicePort: 636
      containerPort: 1636
      dataService: true
      clusterService: true
    https:
      servicePort: 443
      containerPort: 1443
      ingressPort: 443
      dataService: true
    clusterServiceName: pingdirectory-cluster

  ingress:
    hosts:
      - host: pingdirectory._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingdirectory._defaultDomain_


#############################################################
# @param    pingdirectoryproxy PingDirectoryProxy values
#
# @param    pingdirectoryproxy.enabled Enable PingDirectoryProxy deployment
# @default  false
#############################################################
pingdirectoryproxy:
  enabled: false
  name: pingdirectoryproxy
  image:
    name: pingdirectoryproxy

  container:
    resources:
      requests:
        cpu: 0
        memory: .75Gi
      limits:
        cpu: 2
        memory: 2Gi

  services:
    ldaps:
      servicePort: 636
      containerPort: 1636
      clusterService: true
    https:
      servicePort: 443
      containerPort: 1443
      dataService: true
    clusterServiceName: pingdirectoryproxy-cluster

#############################################################
# @param    pingdelegator PingDelegator values
#
# @param    pingdelegator.enabled Enable PingDelegator deployment
# @default  false
#############################################################
pingdelegator:
  enabled: false
  name: pingdelegator
  image:
    name: pingdelegator

  container:
    resources:
      requests:
        cpu: 0
        memory: 32Mi
      limits:
        cpu: 500m
        memory: 64Mi

  publicPort: 443

  tokenProvider:
    port: 9031
    clientId: dadmin

  pingDirectoryServer:
    port: 443

  services:
    https:
      servicePort: 6443
      containerPort: 6443
      ingressPort: 443
      dataService: true

  ingress:
    hosts:
      - host: pingdelegator._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingdelegator._defaultDomain_

#############################################################
# @param    pingdatasync PingDataSync values
#
# @param    pingdatasync.enabled Enable PingDataSync deployment
# @default  false
#############################################################
pingdatasync:
  enabled: false
  name: pingdatasync
  image:
    name: pingdatasync

  container:
    resources:
      requests:
        cpu: 0
        memory: .75Gi
      limits:
        cpu: 2
        memory: 2Gi

  services:
    ldaps:
      servicePort: 636
      containerPort: 1636
      clusterService: true
    https:
      servicePort: 443
      containerPort: 1443
      dataService: true
    clusterServiceName: pingdatasync-cluster

#############################################################
# @param    pingauthorize PingAuthorize values
#
# @param    pingauthorize.enabled Enable PingAuthorize deployment
# @default  false
#############################################################
pingauthorize:
  enabled: false
  name: pingauthorize
  image:
    name: pingauthorize

  container:
    resources:
      requests:
        cpu: 0
        memory: 1.5Gi
      limits:
        cpu: 2
        memory: 4Gi

  services:
    https:
      servicePort: 443
      containerPort: 1443
      ingressPort: 443
      dataService: true
    ldaps:
      servicePort: 636
      containerPort: 1636
      clusterService: true
    clusterServiceName: pingauthorize-cluster

  ingress:
    hosts:
      - host: pingauthorize._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingauthorize._defaultDomain_

#############################################################
# @param    pingauthorizepap PingAuthorizePAP values
#
# @param    pingauthorizepap.enabled Enable PingAuthorizePAP deployment
# @default  false
#############################################################
pingauthorizepap:
  enabled: false
  name: pingauthorizepap
  image:
    name: pingauthorizepap

  container:
    resources:
      requests:
        cpu: 0
        memory: .75Gi
      limits:
        cpu: 2
        memory: 2Gi

  envs:
    HTTPS_PORT: "8443"

  services:
    https:
      servicePort: 8443
      containerPort: 8443
      ingressPort: 443
      dataService: true

  ingress:
    hosts:
      - host: pingauthorizepap._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingauthorizepap._defaultDomain_

#############################################################
# @param    pingdatagovernance PingDataGovernance values
#
# @param    pingdatagovernance.enabled Enable PingDataGovernance deployment
# @default  false
#############################################################
pingdatagovernance:
  enabled: false
  name: pingdatagovernance
  image:
    name: pingdatagovernance

  container:
    resources:
      requests:
        cpu: 0
        memory: 1.5Gi
      limits:
        cpu: 2
        memory: 4Gi

  services:
    https:
      servicePort: 443
      containerPort: 1443
      ingressPort: 443
      dataService: true
    ldaps:
      servicePort: 636
      containerPort: 1636
      clusterService: true
    clusterServiceName: pingdatagovernance-cluster

  ingress:
    hosts:
      - host: pingdatagovernance._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingdatagovernance._defaultDomain_

#############################################################
# @param    pingdatagovernancepap PingDataGovernancePAP values
#
# @param    pingdatagovernancepap.enabled Enable PingDataGovernancePAP deployment
# @default  false
#############################################################
pingdatagovernancepap:
  enabled: false
  name: pingdatagovernancepap
  image:
    name: pingdatagovernancepap

  container:
    resources:
      requests:
        cpu: 0
        memory: .75Gi
      limits:
        cpu: 2
        memory: 2Gi

  envs:
    HTTPS_PORT: "8443"
  services:
    https:
      servicePort: 8443
      containerPort: 8443
      ingressPort: 443
      dataService: true

  ingress:
    hosts:
      - host: pingdatagovernancepap._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingdatagovernancepap._defaultDomain_

#############################################################
# @param    pingaccess-admin PingAccess admin values
#
# @param    pingaccess-admin.enabled Enable PingAccess admin deployment
# @default  false
#############################################################
pingaccess-admin:
  enabled: false
  name: pingaccess-admin
  image:
    name: pingaccess

  workload:
    type: StatefulSet

  container:
    resources:
      requests:
        cpu: 0
        memory: 1Gi
      limits:
        cpu: 2
        memory: 4Gi

  # Example: If PingAccess Admin relies on pingfederate-admin for AuthN
  #          Creates init container wait-for on pingfederate-admin https service
  #
  # container:
  #   waitFor:
  #     pingfederate-admin:
  #       service: https
  #       timeoutSeconds: 300

  services:
    https:
      servicePort: 9000
      containerPort: 9000
      ingressPort: 443
      dataService: true
    clusterconfig:
      servicePort: 9090
      containerPort: 9090
      dataService: true

  ingress:
    hosts:
      - host: pingaccess-admin._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingaccess-admin._defaultDomain_

#############################################################
# @param    pingaccess-engine PingAccess engine values
#
# @param    pingaccess-engine.enabled Enable PingAccess engine deployment
# @default  false
#############################################################
pingaccess-engine:
  enabled: false
  name: pingaccess-engine
  image:
    name: pingaccess

  container:
    resources:
      requests:
        cpu: 0
        memory: 1Gi
      limits:
        cpu: 2
        memory: 4Gi
    waitFor:
      pingaccess-admin:
        service: https
        timeoutSeconds: 300

  services:
    https:
      servicePort: 3000
      containerPort: 3000
      ingressPort: 443
      dataService: true

  ingress:
    hosts:
      - host: pingaccess-engine._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingaccess-engine._defaultDomain_

#############################################################
# @param    pingdataconsole PingDataConsole values
#
# @param    pingdataconsole.enabled Enable PingDataConsole deployment
# @default  false
#############################################################
pingdataconsole:
  enabled: false
  name: pingdataconsole
  image:
    name: pingdataconsole

  container:
    resources:
      requests:
        cpu: 0
        memory: .5Gi
      limits:
        cpu: 2
        memory: 2Gi

  # @param    pingdataconsole.defaultLogin Default login details for the console
  #
  # @param    pingdataconsole.defaultLogin.server.host Default hostname
  # @default  pingdirectory-cluster
  #
  # @param    pingdataconsole.defaultLogin.server.port Default port
  # @default  636
  #
  # @param    pingdataconsole.defaultLogin.username Default username
  # @default  administrator
  defaultLogin:
    server:
      host: pingdirectory-cluster
      port: 636
    username: administrator

  services:
    https:
      containerPort: 8443
      servicePort: 8443
      ingressPort: 443
      dataService: true

  ingress:
    hosts:
      - host: pingdataconsole._defaultDomain_
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: https
    tls:
      - secretName: _defaultTlsSecret_
        hosts:
          - pingdataconsole._defaultDomain_

#############################################################
# @param    pd-replication-timing PingDirectory replication timing values
#
# @param    pd-replication-timing.enabled Enable PingDirectory replication timing deployment
# @default  false
#############################################################
pd-replication-timing:
  enabled: false
  name: pd-replication-timing
  image:
    name: pingtoolkit

  envs:
    SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    SERVER_PROFILE_PATH: dsreplication-timing
    STARTUP_COMMAND: /opt/out/instance/bin/start-server
    STARTUP_BACKGROUND_OPTS: ""

#############################################################
# @param    pingtoolkit PingToolkit values
#
# @param    pingtoolkit.enabled Enable PingToolkit deployment
# @default  false
#############################################################
pingtoolkit:
  enabled: false
  name: pingtoolkit
  image:
    name: pingtoolkit

#############################################################
# testFramework
#############################################################
testFramework:
  # Disabled by default
  enabled: false
  name: testframework
  sharedMountPath: /var/run/shared

  #########################################################
  # If rbac is enabled, this will create:
  #   - serviceAccount
  #   - role
  #   - roleBinding (between serviceAccount and role)
  #
  # and apply the serviceAccount to the pod in the tests.
  # The names for these resources will be named using the
  # naming rules for all resources including the ReleaseName
  #########################################################
  rbac:
    enabled: true
    role:
      rules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - '*'

  testConfigMaps:
    prefix: ping-devops-test-
    volumeMountPath: /var/run/
    #########################################################
    # Array of configmap names (prefixed with prefix above)
    # Example includes:
    #########################################################
    # files:
    #   - init-test.sh
    #   - check-pingfederate.postman-collection.json
    #   - generated.postman-environment.json

  testSteps: []
    #########################################################
    # Array of steps.
    # Example includes:
    #
    # waitFor - Example below will create 2 init containers:
    #           - 01-wait-for-pingfederate-admin
    #           - 01-wait-for-pingfederate-engine
    #########################################################
    # - name: 01-wait-for
    #   waitFor:
    #     pingfederate-admin:
    #       service: https
    #     pingfederate-engine:
    #       service: https

    # - name: 02-init-test
    #   image: busybox
    #   command:
    #     - /bin/sh
    #     - /var/run/init-test.sh

    # - name: 03-check-pingfederate
    #   image: postman/newman:5-alpine
    #   command:
    #     - newman
    #     - run
    #     - /var/run/check-pingfederate.postman-collection.json
    #     - --environment
    #     - /var/run/generated.postman-environment.json
    #     - --insecure
    #     - --ignore-redirects

  finalStep:
    name: 99-completion
    image: busybox
    imagePullPolicy: IfNotPresent
    command:
      - /bin/sh
      - -c
      - echo "*************************************"; echo "Testing Complete"; date; echo "*************************************";
      - exit 0
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 1m
        memory: 64Mi

  #########################################################
  # Pod information to include
  #
  # Examples:
  #   securityContext for all containers
  #########################################################
  pod:
    securityContext:
      runAsUser: 1000
      runAsGroup: 2000
