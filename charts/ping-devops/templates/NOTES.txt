{{ include "pinglib.notes.header" . }}
{{- if $.Values.global.masterPassword.enabled }}
# WARNING: Master Password has been requested and generated.  This is intended to
#          generate a password for DEVELOPMENT PURPOSES ONLY.  This password will be
#          assigned to the PING_IDENTITY_PASSWORD unless overridden by the values.
#
#          PING_IDENTITY_PASSWORD: {{ include "pinglib.gen-master-password" . }}
#-------------------------------------------------------------------------------------
{{- end }}

{{- $format := "%-1.1s %-21.21s %-7.7s %-3.3s %2.2s %4.4s%1s%-4.4s %4.4s%1s%-4.4s %3.3s" }}
{{- $initconFormat := "    init    - %s" }}
{{- $sidecarFormat := "    sidecar - %s" }}
#
#  {{ printf $format " " "       Product       " "  tag  " "typ" " #" " cpu" " " "R/L " " mem" " " "R/L " "Ing"}}
#  {{ printf $format " " "---------------------" "-------" "---" "--" "----" "-" "----" "----" "-" "----" "---"}}
#  {{ printf $format " " "global" (toString $.Values.global.image.tag) "" "" (toString $.Values.global.container.resources.requests.cpu) "/" (toString $.Values.global.container.resources.limits.cpu) (toString $.Values.global.container.resources.requests.memory) "/" (toString $.Values.global.container.resources.limits.memory) (ternary " √ " "" $.Values.global.ingress.enabled) }}
#
{{- $products := list "pingaccess-admin" "pingaccess-engine" "pingauthorize" "pingauthorizepap" "pingcentral" "pingdataconsole" "pingdatasync" "pingdelegator" "pingdirectory" "pingdirectoryproxy" "pingfederate-admin" "pingfederate-engine" "---" "ldap-sdk-tools" "pd-replication-timing" "pingtoolkit"}}
{{- range $prodName := $products }}
{{- if eq $prodName "---" }}
#
{{- end }}
{{- with (index $.Values $prodName)}}
    {{- $prodEnabled := ternary "√" "" .enabled }}
    {{- $tag := ternary (toString .image.tag) "" .enabled }}
    {{- $workload := "" }}
    {{- if .workload }}
      {{- $workload = ternary (ternary "dep" "sts" (eq .workload.type "Deployment")) "" .enabled }}
    {{- end }}
    {{- $numReplica := "" }}
    {{- if .container }}
        {{- if .container.replicaCount }}
            {{- $numReplica = ternary (toString .container.replicaCount) "" .enabled }}
        {{- end }}
    {{- end }}
    {{- $slash := ternary "/" "" .enabled }}
    {{- $cpur := "" }}
    {{- $cpul := "" }}
    {{- $memr := "" }}
    {{- $meml := "" }}
    {{- if .container }}
        {{- if .container.resources }}
            {{- $cpur = ternary (toString .container.resources.requests.cpu) "" .enabled }}
            {{- $cpul = ternary (toString .container.resources.limits.cpu) "" .enabled }}
            {{- $memr = ternary (toString .container.resources.requests.memory) "" .enabled }}
            {{- $meml = ternary (toString .container.resources.limits.memory) "" .enabled }}
        {{- end }}
    {{- end }}
    {{- $ingEnabled := "" }}
    {{- if .ingress }}
        {{- $ingEnabled = .enabled | ternary (ternary " √ " "" .ingress.enabled) "" }}
    {{- end }}
#  {{ printf $format $prodEnabled $prodName $tag $workload $numReplica $cpur $slash $cpul $memr $slash $meml $ingEnabled  }}
{{- if .enabled }}
{{- range .includeInitContainers }}
#  {{ printf $initconFormat . }}
{{- end }}
{{- range .includeSidecars }}
#  {{ printf $sidecarFormat . }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
#
{{ include "pinglib.notes.footer" . }}