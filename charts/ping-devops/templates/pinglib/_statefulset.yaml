{{- define "pinglib.statefulset.tpl" -}}
{{- $top := index . 0 -}}
{{- $v := index . 1 -}}
apiVersion: apps/v1
kind: StatefulSet
metadata: {{ include "pinglib.metadata.labels" .  | nindent 2 }}
  name: {{ include "pinglib.fullname" . }}
spec:
{{ include "pinglib.replicas" $v.container | indent 2 }}
  serviceName: {{ include "pinglib.fullname" . }}-cluster
  selector:
    matchLabels: {{ include "pinglib.selector.labels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: {{ $v.statefulSet.updateStrategy.partition }}
  podManagementPolicy: OrderedReady
  template:
    metadata: {{ include "pinglib.metadata.labels" .  | nindent 6  }}
        {{ include "pinglib.selector.labels" . | nindent 8 }}
      annotations: {{ include "pinglib.annotations.vault" $v.vault | nindent 8 }}
        {{/* Following checksum pulls in release and product configmaps and creates checksum to force restart  */}}
        checksum/config: {{ printf "%s%s" (include (print $top.Template.BasePath "/global/configmap.yaml") $top) (include (print $top.Template.BasePath "/" $v.name "/configmap.yaml") $top) | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 300
      {{- if $v.vault.enabled }}
      serviceAccountName: vault-auth
      {{- end }}
      containers:
      - name: {{ $v.name }}
        env: []

{{ include "pinglib.container.command" $v.container.command | indent 8 }}
{{ include "pinglib.imagetags" $v.image | indent 8 }}
{{ include "pinglib.container.ports" $v.services | indent 8 }}
{{ include "pinglib.envfrom" . | indent 8 }}
{{ include "pinglib.probes" $v.probes  | indent 8 }}
        {{- if $v.persistentvolume.enabled }}
        volumeMounts:
        {{- range $v.persistentvolume.volumes }}
        - name: {{ .name }}{{ if eq "none" $v.addReleaseNameToResource }}-{{ $top.Release.Name }}{{ end }}
          mountPath: {{ .mountPath }}
        {{- end }}
        {{- end }}
        resources: {{ toYaml $v.container.resources | nindent 10 }}
      nodeSelector: {{ toYaml $v.container.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml $v.container.tolerations | nindent 8 }}
    {{- if $v.persistentvolume.enabled }}
      volumes:
      {{- range $v.persistentvolume.volumes }}
      - name: {{ .name }}{{ if eq "none" $v.addReleaseNameToResource }}-{{ $top.Release.Name }}{{ end }}
        persistentVolumeClaim:
          claimName: {{ .name }}{{ if eq "none" $v.addReleaseNameToResource }}-{{ $top.Release.Name }}{{ end }}
      {{- end }}
    {{- end }}

  {{- if $v.persistentvolume.enabled }}
  volumeClaimTemplates:
  {{- range $v.persistentvolume.volumes }}
  - metadata:
      name: {{ .name }}{{ if eq "none" $v.addReleaseNameToResource }}-{{ $top.Release.Name }}{{ end }}
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .storageClassName }}
      resources:
        requests:
          storage: {{ .storage }}
  {{- end }}
  {{- end }}
{{- end -}}


{{- define "pinglib.statefulset" -}}
{{- include "pinglib.merge.templates" (append . "statefulset") -}}
{{- end -}}